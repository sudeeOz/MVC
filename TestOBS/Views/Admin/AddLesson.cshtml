@model TestOBS.Models.Lesson
<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ders Ekleme Sayfasƒ±</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

         body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            flex-direction: column; /* √ºstte navbar, altta i√ßerik */
            align-items: center;
            justify-content: flex-start; /* yukarƒ±dan ba≈üla */
            padding: 20px;
        }

        .container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 600px;
            animation: slideUp 0.6s ease-out;
            margin: 80px auto 40px auto; /* √ºstten bo≈üluk ver */
        }

        @@keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        h1 {
            text-align: center;
            color: #4a5568;
            margin-bottom: 30px;
            font-size: 2.5rem;
            font-weight: 700;
            position: relative;
        }

        h1::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 3px;
            background: linear-gradient(90deg, #667eea, #764ba2);
            border-radius: 2px;
        }

        .form-group {
            margin-bottom: 25px;
            position: relative;
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #4a5568;
            font-weight: 600;
            font-size: 1rem;
        }

        input[type="text"],
        input[type="number"],
        select,
        textarea {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e2e8f0;
            border-radius: 12px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: #f8fafc;
        }

        input[type="text"]:focus,
        input[type="number"]:focus,
        select:focus,
        textarea:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            background: white;
            transform: translateY(-2px);
        }

        select {
            cursor: pointer;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 12px center;
            background-repeat: no-repeat;
            background-size: 16px;
            padding-right: 40px;
            appearance: none;
        }

        textarea {
            resize: vertical;
            min-height: 120px;
            font-family: inherit;
        }

        .custom-input-container {
            margin-top: 10px;
            display: none;
            animation: fadeIn 0.3s ease-out;
        }

        @@keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        .custom-input-container.show {
            display: block;
        }

        .submit-btn {
            width: 100%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 16px 32px;
            border: none;
            border-radius: 12px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .submit-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
        }

        .submit-btn:active {
            transform: translateY(0);
        }

        .submit-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s;
        }

        .submit-btn:hover::before {
            left: 100%;
        }

        .department-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 20px;
        }

        .department-card {
            background: #f8fafc;
            border: 2px solid #e2e8f0;
            border-radius: 12px;
            padding: 15px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .department-card:hover {
            border-color: #667eea;
            background: #f1f5f9;
            transform: translateY(-2px);
        }

        .department-card.selected {
            border-color: #667eea;
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.1), rgba(118, 75, 162, 0.1));
        }

        .required {
            color: #e53e3e;
        }

        @@media (max-width: 768px) {
            body {
                padding: 10px;
            }
            
            .container {
                padding: 30px 20px;
                margin: 10px auto;
                max-width: 95%;
            }

            h1 {
                font-size: 2rem;
            }

            .department-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Ders Ekleme</h1>
        <form asp-action="AddLesson" asp-controller="Admin" method="post">
            <div class="form-group">
                <label for="Id">Ders Kodu <span class="required">*</span></label>
                <input type="text" id="Id" name="CourseCode" placeholder="Ders kodunu giriniz (√∂rn: BIL101)" required>
                <small style="color: #64748b; font-size: 0.9rem;">Ders kodunu manuel olarak giriniz</small>
            </div>

            <div class="form-group">
                <label for="Name">Ders Adƒ± <span class="required">*</span></label>
                <select id="nameSelect" onchange="toggleCustomInput('nameSelect', 'customNameContainer')">
                    <option value="">Ders Se√ßiniz veya "Diƒüer" se√ßerek manuel giriniz</option>
                    <optgroup label="Bilgisayar M√ºhendisliƒüi">
                        <option value="Veri Yapƒ±larƒ± ve Algoritmalar">Veri Yapƒ±larƒ± ve Algoritmalar</option>
                        <option value="Nesne Y√∂nelimli Programlama">Nesne Y√∂nelimli Programlama</option>
                    </optgroup>
                    <optgroup label="Elektrik-Elektronik M√ºhendisliƒüi">
                        <option value="Devre Analizi">Devre Analizi</option>
                        <option value="Elektromanyetik Alan Teorisi">Elektromanyetik Alan Teorisi</option>
                    </optgroup>
                    <optgroup label="Makine M√ºhendisliƒüi">
                        <option value="Termodinamik">Termodinamik</option>
                        <option value="Malzeme Bilimi">Malzeme Bilimi</option>
                    </optgroup>
                    <optgroup label="End√ºstri M√ºhendisliƒüi">
                        <option value="Y√∂neylem Ara≈ütƒ±rmasƒ±">Y√∂neylem Ara≈ütƒ±rmasƒ±</option>
                        <option value="√úretim Planlama ve Kontrol">√úretim Planlama ve Kontrol</option>
                    </optgroup>
                    <optgroup label="ƒ∞≈ületme">
                        <option value="Pazarlama Y√∂netimi">Pazarlama Y√∂netimi</option>
                        <option value="Mali Analiz">Mali Analiz</option>
                    </optgroup>
                    <optgroup label="ƒ∞ktisat">
                        <option value="Mikroekonomi">Mikroekonomi</option>
                        <option value="Makroekonomi">Makroekonomi</option>
                    </optgroup>
                    <optgroup label="Matematik">
                        <option value="Diferansiyel Denklemler">Diferansiyel Denklemler</option>
                        <option value="Lineer Cebir">Lineer Cebir</option>
                    </optgroup>
                    <optgroup label="Fizik">
                        <option value="Kuantum Fiziƒüi">Kuantum Fiziƒüi</option>
                        <option value="Elektrodinamik">Elektrodinamik</option>
                    </optgroup>
                    <option value="custom">üñäÔ∏è Diƒüer (Manuel Giri≈ü)</option>
                </select>
                <div id="customNameContainer" class="custom-input-container">
                    <input type="text" id="customName" placeholder="Ders adƒ±nƒ± giriniz...">
                </div>
                <input type="hidden" id="Name" name="Name" required>
            </div>

            <div class="form-group">
                <label for="Credit">Kredi <span class="required">*</span></label>
                <input type="number" id="Credit" name="Credit" min="1" max="10" required>
            </div>

            <div class="form-group">
                <label for="Department">B√∂l√ºm <span class="required">*</span></label>
                <select id="departmentSelect" onchange="toggleCustomInput('departmentSelect', 'customDepartmentContainer')">
                    <option value="">B√∂l√ºm Se√ßiniz</option>
                    <option value="Bilgisayar M√ºhendisliƒüi">Bilgisayar M√ºhendisliƒüi</option>
                    <option value="Elektrik-Elektronik M√ºhendisliƒüi">Elektrik-Elektronik M√ºhendisliƒüi</option>
                    <option value="Makine M√ºhendisliƒüi">Makine M√ºhendisliƒüi</option>
                    <option value="End√ºstri M√ºhendisliƒüi">End√ºstri M√ºhendisliƒüi</option>
                    <option value="ƒ∞≈ületme">ƒ∞≈ületme</option>
                    <option value="ƒ∞ktisat">ƒ∞ktisat</option>
                    <option value="Matematik">Matematik</option>
                    <option value="Fizik">Fizik</option>
                    <option value="custom">üñäÔ∏è Diƒüer (Manuel Giri≈ü)</option>
                </select>
                <div id="customDepartmentContainer" class="custom-input-container">
                    <input type="text" id="customDepartment" placeholder="B√∂l√ºm adƒ±nƒ± giriniz...">
                </div>
                <input type="hidden" id="Department" name="Department" required>
            </div>

            <div class="form-group">
                <button type="submit" class="submit-btn">
                    üìö Dersi Ekle
                </button>
            </div>
        </form>
    </div>

    <script>
        function toggleCustomInput(selectId, containerId) {
            const select = document.getElementById(selectId);
            const container = document.getElementById(containerId);
            const hiddenInput = document.getElementById(selectId.replace('Select', ''));
            
            if (select.value === 'custom') {
                container.classList.add('show');
                container.querySelector('input').required = true;
                hiddenInput.value = '';
            } else {
                container.classList.remove('show');
                container.querySelector('input').required = false;
                hiddenInput.value = select.value;
            }
        }

        // Form submission handler
        document.querySelector('form').addEventListener('submit', function(e) {
            const nameSelect = document.getElementById('nameSelect');
            const departmentSelect = document.getElementById('departmentSelect');
            const nameHidden = document.getElementById('Name');
            const departmentHidden = document.getElementById('Department');
            const idField = document.getElementById('Id');
            const creditField = document.getElementById('Credit');
            
            // Validate ID field
            if (!idField.value.trim()) {
                e.preventDefault();
                alert('L√ºtfen ders kodunu giriniz!');
                idField.focus();
                return;
            }
            
            // Handle name field
            if (nameSelect.value === 'custom') {
                const customName = document.getElementById('customName').value;
                if (!customName.trim()) {
                    e.preventDefault();
                    alert('L√ºtfen ders adƒ±nƒ± giriniz!');
                    document.getElementById('customName').focus();
                    return;
                }
                nameHidden.value = customName.trim();
            } else {
                if (!nameSelect.value) {
                    e.preventDefault();
                    alert('L√ºtfen bir ders se√ßiniz!');
                    nameSelect.focus();
                    return;
                }
                nameHidden.value = nameSelect.value;
            }
            
            // Handle department field
            if (departmentSelect.value === 'custom') {
                const customDepartment = document.getElementById('customDepartment').value;
                if (!customDepartment.trim()) {
                    e.preventDefault();
                    alert('L√ºtfen b√∂l√ºm adƒ±nƒ± giriniz!');
                    document.getElementById('customDepartment').focus();
                    return;
                }
                departmentHidden.value = customDepartment.trim();
            } else {
                if (!departmentSelect.value) {
                    e.preventDefault();
                    alert('L√ºtfen bir b√∂l√ºm se√ßiniz!');
                    departmentSelect.focus();
                    return;
                }
                departmentHidden.value = departmentSelect.value;
            }
            
            // Validate credit field
            if (!creditField.value || creditField.value < 1 || creditField.value > 10) {
                e.preventDefault();
                alert('L√ºtfen 1-10 arasƒ±nda ge√ßerli bir kredi deƒüeri giriniz!');
                creditField.focus();
                return;
            }
            
            // All validations passed, show loading animation
            const btn = document.querySelector('.submit-btn');
            btn.innerHTML = '‚è≥ Ekleniyor...';
            btn.disabled = true;
            
            // Log form data for debugging
            console.log('Form Data:', {
                Id: idField.value,
                Name: nameHidden.value,
                Credit: creditField.value,
                Department: departmentHidden.value
            });
        });

        // Add smooth focus transitions
        document.querySelectorAll('input, select, textarea').forEach(element => {
            element.addEventListener('focus', function() {
                this.parentElement.style.transform = 'scale(1.02)';
            });
            
            element.addEventListener('blur', function() {
                this.parentElement.style.transform = 'scale(1)';
            });
        });
    </script>
</body>
</html>